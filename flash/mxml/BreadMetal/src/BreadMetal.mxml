<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   initialize="init()">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here 
		<s:RadioButtonGroup id="drivingType" itemClick="handleDrivingType(event); "/>-->
	</fx:Declarations>
	
	
	<fx:Script>
		<![CDATA[
			import utils.FilePlucker;
			import utils.Resizer;
			
			// Vars
			private var sourceFolder:File;
			private var sourceFolderSelected:Boolean = false;
			private var destFolder:File;
			private var destFolderSelected:Boolean = false;
			private var SO:SharedObject;
			private var dict:Dictionary;
			private var sourceWidth:Number = 0;
			private var sourceHeight:Number = 0;
			private var directoriesArray:Array;
			
			
			// Start it off.
			private function init():void
			{
				
				// Crate Dictionay for ComboBoxes.
				dict = new Dictionary;
				
				// Grab the SharedObject.
				SO = SharedObject.getLocal("BREADMETAL");
				
				if(SO.data.rememberDestination.length > 0 ) 
				{
					
					destDir.text = SO.data.rememberDestination;
					destFolderSelected = true;
					trace( ( rememberDestination as CheckBox ).selected );
					trace( ( rememberDestination as CheckBox ).label );
					rememberDestination.selected = true;
					
				}
				
			}
			
			
			private function selectDestinationPath():void
			{
				
				trace("selectDestinationPath");
				destFolder = new File;
				destFolder.addEventListener( Event.SELECT, onSelectedDest );
				destFolder.browseForDirectory( "Choose source folder" );
				
			}
			
			
			private function selectDirectoryToCopy():void
			{
				
				trace("selectDirectoryToCopy");
				sourceFolder = new File;
				sourceFolder.addEventListener( Event.SELECT, onSelectedSrc );
				sourceFolder.browseForDirectory( "Choose source folder" );
				
			}
			
			
			private function onSelectedSrc(e:Event):void
			{
				
				trace("onSelectedSrc");
				srcDir.text = sourceFolder.nativePath;
				sourceFolderSelected = true;
				
			}
			
			
			private function onSelectedDest(e:Event):void
			{
				
				trace("onSelectedDest");
				destFolderSelected = true;
				destDir.text = destFolder.nativePath;
				
			}
			
			
			private function processFiles():void
			{
				
				trace("processFiles");
				
				//if( sourceFolderSelected && destFolderSelected && srcWidthTxt.text.length > 0 && srcHeightTxt.text.length > 0 )
				//if( sourceFolderSelected && destFolderSelected && srcWidthTxt.text.length > 0 && srcHeightTxt.text.length > 0 )
				if( sourceFolderSelected && destFolderSelected )
					//if( srcDir.text.length > 0 && destDir.text.length > 0 && srcWidthTxt.text.length > 0 && srcHeightTxt.text.length > 0 )
				{
					
					trace("processFiles - Do copying.");
					
					
					
					//sourceWidth = Number( srcWidthTxt.text );
					//sourceHeight = Number( srcHeightTxt.text );
					
					
					createDestinationDirectories();
					
					
					
					
					//srcWidthTxt.text = "";
					//srcHeightTxt.text = "";
					srcDir.text = "";
					
					SO.data.rememberDestination = ( ( rememberDestination as CheckBox ).enabled ) ? destDir.text : "";
					
				}
				
			}
			
			
			private function createDestinationDirectories():void
			{
				
				trace("createDestinationDirectories");
				
				// Source folder.
				var newSrcStr:String = String( srcDir.text );
				var newSrcDir:File = new File( newSrcStr );
				
				// Create new folder.
				var newDestStr:String = String( destDir.text + "/" + newSrcDir.name );
				var newDestDir:File = new File( newDestStr );
				newDestDir.createDirectory();
				
				
				
				
				FilePlucker.run( newSrcDir, newDestDir );
				
				
				
				
				directoriesArray = [];
				if( useSizmek.selected ) directoriesArray.push("SIZMEK");
				if( useGoogle.selected ) directoriesArray.push("GOOGLE");
				
				
				
				for(var i:uint = 0; i < directoriesArray.length; i++)
				{
					
					trace(i);
					//var f:File = new File();
					
					
					
					
					
				}
				
				
				
				
			}
			
			
			
			
			
			
			
			
			
		]]>
	</fx:Script>
	
	
	
	
	<s:VGroup id="content" paddingTop="10" paddingLeft="10">
		<s:BorderContainer >
		<s:VGroup id="platforms" paddingTop="10" paddingLeft="10" paddingRight="10" paddingBottom="10">
			<s:Label text="Platforms"></s:Label>
			<s:HGroup>
			<s:CheckBox id="useSizmek" width="85" label="SIZMEK"/> 
			<s:CheckBox id="useGoogle" width="85" label="GOOGLE"/> 
			</s:HGroup>
			</s:VGroup>
			</s:BorderContainer>
		<s:Label text="Source"></s:Label>
		<s:HGroup>
			<s:TextInput id="srcDir" width="200" text="Use this directory."></s:TextInput>
			<s:Button id="srcDirButton" width="70" label="Select" click="selectDirectoryToCopy();"></s:Button>
		</s:HGroup>
		<s:Label text="Destination"></s:Label>
		<s:HGroup>
			<s:TextInput id="destDir" width="200" text="Copy files to this directory."></s:TextInput>
			<s:Button id="destDirButton" width="70" label="Select" click="selectDestinationPath();"></s:Button>
			<s:CheckBox id="rememberDestination" width="100" label="Remember"/> 
		</s:HGroup>
		<!--
		<mx:VBox>
			<s:Label text="Define the size of the source banner."/>
			<s:HGroup>
				<s:Label text="Width"></s:Label>
				<s:TextInput id="srcWidthTxt" width="100" restrict="0-9"></s:TextInput>
				<s:Label text="Height"></s:Label>
				<s:TextInput id="srcHeightTxt" width="100" restrict="0-9"></s:TextInput>
			</s:HGroup>
			<s:Button id="copyButton" width="120" label="Copy Files" click="processFiles();"></s:Button>
		</mx:VBox>
		-->
		<mx:VBox>
			<s:Button id="copyButton" width="200" height="60" label="Process Files" click="processFiles();"></s:Button>
		</mx:VBox>
	</s:VGroup>
</s:WindowedApplication>
