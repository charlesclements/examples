package com.imt.framework.display.dialogue{	import com.bedrock.framework.core.dispatcher.BedrockDispatcher;	import com.bedrock.framework.plugin.util.ButtonUtil;	import com.imt.framework.engine.data.SiteData;	import com.imt.framework.display.IDisplay;	import com.imt.framework.core.event.SiteEvent;		import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;
		public class ConfirmDialogueView extends AbstractDialogue implements IDisplay	{				public var btnYes:MovieClip;		public var btnNo:MovieClip;						public function ConfirmDialogueView()		{						super();					}						public function initialize(data:Object=null):void		{						trace(this + " : initialize" );						//ButtonUtil.addListeners( btnYes, { down:onButttonsClick } );			//ButtonUtil.addListeners( btnNo, { down:onButttonsClick } );					}						// Refresh class properties.		public function refresh():void		{						trace(this + " : refresh()" );			btnYes.refresh();			btnYes.addEventListener( SiteEvent.SELECTION, onEvent );			btnNo.refresh()			btnNo.addEventListener( SiteEvent.SELECTION, onEvent );			/*			var index:uint = GameData.SELECTED_INDEX - 1;			trace( index );						txtType.text = GameData.GAME_XML..game.( @id == GameData.CODE ).pic[ index ].@type.toString().toUpperCase();			var v:String = GameData.GAME_XML..game.( @id == GameData.CODE ).pic[ index ].@value;			if( v.length <= 0 ) v = "0";			txtValue.text = "$" + v;*/					}				public function clear():void{};		public function start():void{};		public function intro():void{};		public function outro():void{};		public function cancel():void{};		public function destroy():void{};						private function onEvent(e:Event):void		{									/*			var s:String = String( ( $e.currentTarget as MovieClip ).name );			var _index:uint = uint( s.slice( s.length - 1, s.length ) );			BedrockDispatcher.dispatchEvent( new SiteEvent( SiteEvent.SELECTION, this, { page:SiteData.FRESH_HARVEST, index:_index } ));			*/						switch( e.currentTarget )			{								case btnYes:					close();					break;								case btnNo:										break;							}					}			}}