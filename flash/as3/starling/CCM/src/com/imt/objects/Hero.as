package com.imt.objects{	import com.imt.framework.display.IDisplay;	import com.imt.framework.display.AbstractStarlingDisplay;		import starling.core.Starling;	import starling.display.MovieClip;	import starling.display.Sprite;	import starling.events.Event;	import com.imt.games.neo.memory_plane.Assets;
		public class Hero extends AbstractStarlingDisplay implements IDisplay	{						private var hero:MovieClip;														public function Hero()		{			super();						addEventListener( starling.events.Event.ADDED_TO_STAGE, onEvent);								}																		public function initialize():IDisplay		{									if( !initialized )			{								trace( "initialize" );				createArtwork();				initialized = true;							}						return this;					}				public function refresh():IDisplay		{			starling.core.Starling.juggler.add( hero );			return this;		}				public function start():IDisplay		{			return this;		}				public function intro():IDisplay		{			return this;		}				public function outro():IDisplay		{			return this;		}				public function clear():IDisplay		{			starling.core.Starling.juggler.remove( hero );			return this;		}				public function destroy():IDisplay		{			return this;		}																								private function onEvent(event:Event):void		{									switch( event.type )			{								case Event.ENTER_FRAME:										break;												case starling.events.Event.ADDED_TO_STAGE:					trace(this + " : " + event.type);					removeEventListener( starling.events.Event.ADDED_TO_STAGE, onEvent);					initialize();					break;								default:					trace(this + " : Unhandled event.");								}					}						// Create artwork.		private function createArtwork():void		{						trace("createArtwork");			hero = new MovieClip( Assets.getAtlas().getTextures( "fly_"), 20 );				hero.x = Math.ceil( -hero.width * 0.5 );			hero.y = Math.ceil( -hero.height * 0.5 );			addChild( hero );			//starling.core.Starling.juggler.add( hero );					}			}	}