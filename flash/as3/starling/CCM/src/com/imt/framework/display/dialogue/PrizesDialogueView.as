package com.imt.framework.display.dialogue{	import com.bedrock.framework.core.dispatcher.BedrockDispatcher;	import com.bedrock.framework.plugin.util.ButtonUtil;	import com.imt.framework.engine.data.GameData;	import com.imt.framework.engine.data.SiteData;	import com.imt.framework.display.IDisplay;	import com.imt.framework.display.button.AnimatedLightsButton;	import com.imt.framework.core.event.SiteEvent;		import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.text.TextField;			public class PrizesDialogueView extends AbstractDialogue implements IDisplay	{				public var btnYes:AnimatedLightsButton;		public var btnNo:AnimatedLightsButton;		public var txtType:TextField;		public var txtValue:TextField;				public var mcPrizeDescReg:MovieClip;		public var mcPrizeDescX2:MovieClip;		public var mcPrizeDescX3:MovieClip;		public var mcPrizeDescX4:MovieClip;		public var mcPrizeDescVac:MovieClip;		private var _currentClip:MovieClip				public function PrizesDialogueView()		{						super();					}						public function initialize():void		{						trace(this + " : initialize" );			mcPrizeDescVac.txt.gotoAndStop( 1 );					}						// Refresh class properties.		public function refresh():IDisplay		{						trace(this + " : refresh()" );			btnYes.refresh();			btnYes.addEventListener( SiteEvent.SELECTION, onEvent );			btnNo.refresh()			btnNo.addEventListener( SiteEvent.SELECTION, onEvent );			mcPrizeDescReg.visible = false;			mcPrizeDescVac.visible = false;			mcPrizeDescX2.visible = false;			mcPrizeDescX3.visible = false;			mcPrizeDescX4.visible = false;			mcPrizeDescVac.txt.gotoAndStop( 1 );						trace(this + ":" + GameData.PRIZE_TYPE);			switch( GameData.PRIZE_TYPE )			{				case SiteData.CASH:					mcPrizeDescReg.txtType.text = GameData.PRIZE_TYPE;					mcPrizeDescReg.txtValue.text = "$" + String( GameData.PRIZE_VALUE );					mcPrizeDescReg.visible = true;					break;								case SiteData.FREEPLAY:					mcPrizeDescReg.txtType.text = "Free Play"					mcPrizeDescReg.txtValue.text = "$" + String( GameData.PRIZE_VALUE );					mcPrizeDescReg.visible = true;					break;								case SiteData.VACATION:					mcPrizeDescVac.gotoAndStop( GameData.PRIZE_VACATION_VALUE );					mcPrizeDescVac.visible = true;					mcPrizeDescVac.txt.play();					break;								case SiteData.X2:					mcPrizeDescX2.visible = true;					mcPrizeDescX2.txtCash.text = "$" + String( GameData.TOTAL_CASH ) + " Cash";					mcPrizeDescX2.txtFreePlay.text = "$" + String( GameData.TOTAL_FREEPLAY ) + " Free Play";					break;								case SiteData.X3:					mcPrizeDescX3.visible = true;					mcPrizeDescX3.txtCash.text = "$" + String( GameData.TOTAL_CASH ) + " Cash";					mcPrizeDescX3.txtFreePlay.text = "$" + String( GameData.TOTAL_FREEPLAY ) + " Free Play";					break;								case SiteData.X4:					mcPrizeDescX4.visible = true;					mcPrizeDescX4.txtCash.text = "$" + String( GameData.TOTAL_CASH ) + " Cash";					mcPrizeDescX4.txtFreePlay.text = "$" + String( GameData.TOTAL_FREEPLAY ) + " Free Play";					break;							}						return this;					}						// Refresh class properties.		public function clear():IDisplay		{			trace(this + " : clear()" );			mcPrizeDescVac.txt.gotoAndStop( 1 );			return this;					}						private function onEvent(e:Event):void		{						switch( e.type )			{				case SiteEvent.SELECTION:										switch( e.currentTarget )					{												case btnYes:							close();							BedrockDispatcher.dispatchEvent( new SiteEvent( SiteEvent.READY, this, {} ));							break;												case btnNo:							close();							BedrockDispatcher.dispatchEvent( new SiteEvent( SiteEvent.NEXT_GAME, this, {} ));							//ashBedrockDispatcher.dispatchEvent( new SiteEvent( SiteEvent.RESET, this, {} ));							break;											}										break;			}					}			}	}