package com.imt.framework.display.dialogue{	import com.bedrock.framework.core.dispatcher.BedrockDispatcher;	import com.bedrock.framework.plugin.util.ButtonUtil;	import com.imt.framework.core.event.SiteEvent;	import com.imt.framework.display.IDisplay;	import com.imt.framework.display.button.AnimatedLightsButton;	import com.imt.framework.engine.data.GameData;	import com.imt.framework.engine.data.SiteData;		import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.text.TextField;
		public class EndDialogueView extends AbstractDialogue  implements IDisplay	{				//public var btnNextPlayer:AnimatedLightsButton;		public var btnEndGame:AnimatedLightsButton;		public var txtCash:TextField;		public var txtFreePlay:TextField;		public var mcPrizeDescGameOver:MovieClip;						// Constructor.		public function EndDialogueView()		{						super();					}						// Initialize class.		public function initialize(data:Object=null):void		{						trace(this + " : initialize" );					}						// Refresh class properties.		public function refresh():void		{						trace(this + " : refresh()" );			btnEndGame.refresh();			btnEndGame.addEventListener( SiteEvent.SELECTION, onEvent );			//btnNextPlayer.refresh()			//btnNextPlayer.addEventListener( SiteEvent.SELECTION, onEvent );			txtCash.text = "$" + String( GameData.TOTAL_CASH ) + " Cash";			txtFreePlay.text = "$" + String( GameData.TOTAL_FREEPLAY ) + " Free Play";			return this;						btnEndGame.refresh();			btnEndGame.addEventListener( SiteEvent.SELECTION, onEvent );			//btnNextPlayer.refresh()			//btnNextPlayer.addEventListener( SiteEvent.SELECTION, onEvent );			mcPrizeDescGameOver.txtValue.text = "$" + String( GameData.PRIZE_VALUE );			mcPrizeDescGameOver.txtType.text = String( GameData.PRIZE_TYPE );			mcPrizeDescGameOver.txtTotalCash.text = "$" + String( GameData.TOTAL_CASH ) + " Cash";			mcPrizeDescGameOver.txtTotalFreePlay.text = "$" + String( GameData.TOTAL_FREEPLAY ) + " Free Play";			//var b:Boolean = ( GameData.PLAYER_INDEX < GameData.GAME_XML..game.( @id == GameData.CODE ).player.length() - 1 );			//btnNextPlayer.visible = b;					}						public function clear():void{};		public function start():void{};		public function intro():void{};		public function outro():void{};		public function cancel():void{};		public function destroy():void{};						// Handle all events.		private function onEvent(e:Event):void		{						switch( e.type )			{				case SiteEvent.SELECTION:									trace(this + " : " + e.type );					switch( e.currentTarget )					{												case btnEndGame:							close();							BedrockDispatcher.dispatchEvent( new SiteEvent( SiteEvent.RESET, this, {} ));							break;						/*						case btnNextPlayer:							close();							BedrockDispatcher.dispatchEvent( new SiteEvent( SiteEvent.NEXT_GAME, this, {} ));							break;						*/					}					break;							}					}			}}