package com.imt.framework.gadget.gaming{	import com.bedrock.framework.core.dispatcher.BedrockDispatcher;	import com.bedrock.framework.plugin.util.ButtonUtil;	import com.bedrock.framework.plugin.view.Blocker;	import com.bedrock.framework.plugin.view.SpriteView;	import com.greensock.TweenMax;	import com.imt.framework.core.event.SiteEvent;		import flash.display.MovieClip;	import flash.events.MouseEvent;	import flash.text.TextField;
		public class KeyPad extends SpriteView	{						public var b1:MovieClip;		public var b2:MovieClip;		public var b3:MovieClip;		public var b4:MovieClip;		public var b5:MovieClip;		public var b6:MovieClip;		public var b7:MovieClip;		public var b8:MovieClip;		public var b9:MovieClip;		public var b0:MovieClip;		public var bReset:MovieClip;		public var bPlay:MovieClip;		public var txt:TextField;		public var code:String = "";		public var mcBlocker:Blocker;						public function KeyPad()		{			super();						ButtonUtil.addListeners( b1, { down:addKey } );			ButtonUtil.addListeners( b2, { down:addKey } );			ButtonUtil.addListeners( b3, { down:addKey } );			ButtonUtil.addListeners( b4, { down:addKey } );			ButtonUtil.addListeners( b5, { down:addKey } );			ButtonUtil.addListeners( b6, { down:addKey } );			ButtonUtil.addListeners( b7, { down:addKey } );			ButtonUtil.addListeners( b8, { down:addKey } );			ButtonUtil.addListeners( b9, { down:addKey } );			ButtonUtil.addListeners( b0, { down:addKey } );			ButtonUtil.addListeners( bReset, { down:addKey } );			ButtonUtil.addListeners( bPlay, { down:addKey } );						mcBlocker.visible = false					}						private function addKey( $e:MouseEvent ):void		{									if( code.length < 3 )			{								//trace("addKey");								mcBlocker.visible = true;				TweenMax.to( mcBlocker, 0, { delay:0.25, autoAlpha:0 } )								BedrockDispatcher.dispatchEvent( new SiteEvent( SiteEvent.KEYPAD_BUTTON_PRESS, this ) );								var key:String = "";								switch( $e.currentTarget )				{															case b0:						key = "0";						break;										case b1:						key = "1";						break;										case b2:						key = "2";						break;										case b3:						key = "3";						break;										case b4:						key = "4";						break;										case b5:						key = "5";						break;										case b6:						key = "6";						break;										case b7:						key = "7";						break;										case b8:						key = "8";						break;										case b9:						key = "9";						break;									}								code += key;				txt.appendText( "*" );							}						if( $e.currentTarget == bReset ) code = txt.text = "";			if( $e.currentTarget == bPlay ) 			{								BedrockDispatcher.dispatchEvent( new SiteEvent( SiteEvent.SUBMIT_CODE, this, { code:code } ) );				code = txt.text = "";							}					}			}}