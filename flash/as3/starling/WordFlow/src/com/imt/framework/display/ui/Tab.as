package com.imt.framework.display.ui{			import com.imt.framework.core.dispatcher.Dispatcher;	import com.imt.framework.core.dispatcher.StarlingDispatcher;	import com.imt.framework.display.IDisplay;	import com.imt.framework.display.button.AbstractButton;	import com.imt.framework.event.StarlingSiteEvent;	import starling.events.Event;	import starling.textures.Texture;	
		public class Tab extends AbstractButton implements IDisplay	{						public function Tab(data:Object, upState:Texture, text:String, downState:Texture = null)		{			super( data, upState, text, downState );						//addEventListener( Event.ADDED_TO_STAGE, onEvent );			Dispatcher.addEventListener( StarlingSiteEvent.DISABLE_BUTTONS, onEvent );					}						public function initialize($data:Object=null):void		{						//addEventListener( StarlingSiteEvent.TOUCHED, onEvent );			StarlingDispatcher.addEventListener( StarlingSiteEvent.DISABLE_BUTTONS, onEvent );			StarlingDispatcher.addEventListener( StarlingSiteEvent.ENABLE_BUTTONS, onEvent );			initialized = true;					}						public function refresh():void		{						//trace(this + " : refresh().");			if( !initialized ) initialize();			if( locked == false ) enable();			StarlingDispatcher.addEventListener( StarlingSiteEvent.DISABLE_BUTTONS, onEvent );			StarlingDispatcher.addEventListener( StarlingSiteEvent.ENABLE_BUTTONS, onEvent );					}						public function clear():void		{						//trace(this + " : clear().");			StarlingDispatcher.removeEventListener( StarlingSiteEvent.DISABLE_BUTTONS, onEvent );			StarlingDispatcher.removeEventListener( StarlingSiteEvent.ENABLE_BUTTONS, onEvent );					}						// Handle all the events.		private function onEvent(event:Event):void		{									//trace("Tab : onEvent: " + event.type);						switch( event.type )			{								case StarlingSiteEvent.DISABLE_BUTTONS:					//trace(this + " : StarlingSiteEvent.DISABLE_BUTTONS.");					removeEventListener( StarlingSiteEvent.TOUCHED, onEvent );					disable();					break;								case StarlingSiteEvent.ENABLE_BUTTONS:					//trace(this + " : StarlingSiteEvent.DISABLE_BUTTONS.");					addEventListener( StarlingSiteEvent.TOUCHED, onEvent );					enable();					break;								default:					trace(this + " : Unhandled event.");								}					}		//public function refresh():void{};		//public function clear():void{};		public function start():void{};		public function intro():void{};		public function outro():void{};		public function cancel():void{};		public function destroy():void{};					}	}