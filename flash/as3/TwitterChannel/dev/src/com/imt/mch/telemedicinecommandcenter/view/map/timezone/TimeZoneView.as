package com.imt.mch.TeleMedicineCommandCenter.view.map.timezone{	import com.bedrock.framework.core.dispatcher.BedrockDispatcher;	import com.bedrock.framework.plugin.storage.SuperArray;	import com.greensock.TweenMax;	import com.imt.mch.TeleMedicineCommandCenter.event.MapEvent;		import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.display.BlendMode;	import flash.display.DisplayObject;	import flash.display.DisplayObjectContainer;	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.events.Event;	import flash.filters.BitmapFilter;	import flash.filters.BitmapFilterQuality;	import flash.filters.BlurFilter;		import settings.Settings;		public class TimeZoneView extends MovieClip	{				public var tz_0:Tile;		public var tz_1:Tile;		public var tz_2:Tile;		public var tz_3:Tile;		public var tz_4:Tile;		public var tz_5:Tile;		public var tz_6:Tile;		public var tz_7:Tile;		public var tz_8:Tile;		public var tz_9:Tile;		public var tz_10:Tile;		public var tz_11:Tile;		public var tz_12:Tile;		public var tz_13:Tile;		public var tz_14:Tile;		public var tz_15:Tile;		public var tz_16:Tile;		public var tz_17:Tile;		public var tz_18:Tile;		public var tz_19:Tile;		public var tz_20:Tile;		public var tz_21:Tile;		public var tz_22:Tile;		public var tz_23:Tile;		public var tiles:SuperArray;		private var _container:Sprite;		private var _inner:Sprite;		private var _bitmap:Bitmap;		private var _newBitmap:Bitmap;		public var newBitmapDarkener:Bitmap;		private var _background:MovieClip;		private var _timer:TweenMax;		private var _timeTest:Object;						// Constructor		public function TimeZoneView()		{			super();						// Add tiles to Array.			tiles = new SuperArray( [								tz_0,				tz_1,				tz_2,				tz_3,				tz_4,				tz_5,				tz_6,				tz_7,				tz_8,				tz_9,				tz_10,				tz_11,				tz_12,				tz_13,				tz_14,				tz_15,				tz_16,				tz_17,				tz_18,				tz_19,				tz_20,				tz_21,				tz_22,				tz_23							] );						tiles.wrapIndex = true;					}						//		public function initialize($data:Object=null):void		{						trace(this + " : initialize")						_inner = new Sprite();			_inner.alpha = 1;			_container = new Sprite();			_container.addChild( _inner );			addChild( _container );			_background = $data.background;			_background.visible = false;						// Setup tiles.			for(var i:int = 0; i < tiles.length; i++)			{								var tile:Tile = ( tiles.getItemAt( i ) as Tile ).setup( i , tiles.length, 0.01 );				_inner.addChild( tile );							}						// Listens to one tile to complete instead of all of them.			( tiles.getItemAt( 0 ) as Tile ).addEventListener( Event.COMPLETE, onComplete );						_bitmap = new Bitmap( new BitmapData( Settings.MAP_WIDTH, Settings.MAP_HEIGHT, true, 0xff0000 ), "auto", true );			_bitmap.alpha = 0;			//_bitmap.y = 100;			addChild( _bitmap );						//_newBitmapDarkener = new Bitmap( new BitmapData( Settings.MAP_WIDTH, Settings.MAP_HEIGHT, true, 0xff0000 ), "auto", true );						_newBitmap = new Bitmap( new BitmapData( Settings.MAP_WIDTH, Settings.MAP_HEIGHT, true, 0xff0000 ), "auto", true );			_newBitmap.alpha = 0;			//_newBitmap.y = 100;			addChild( _newBitmap );						// Added blur to _container so that the bitmap wouldnt be blurred and wasting resources.			_inner.filters = [ new BlurFilter( 40, 0, BitmapFilterQuality.HIGH ) ];			_inner.blendMode = BlendMode.MULTIPLY;						// Removing from display list.			removeChild( _container );						// Check timezone day/night.			_timer = TweenMax.to( {}, Settings.TIMEZONE_UPDATE_INTERVAL, { onComplete:checkForUpdates } ); 					}						private function checkForUpdates():void		{						trace("checkForUpdates");						checkTime();						_timer.restart();					}						private function checkTime():void		{						trace("checkTime");						var l:uint = tiles.length;						for( var i:uint = 0; i < l; i++ )			{								var t:Tile = ( tiles.source[ i ] as Tile )				t.checkTime();							}					}						// Updates timezone data.		public function update($o:Object=null):TimeZoneView		{						trace(this + " : update")						_newBitmap.bitmapData = _bitmap.bitmapData.clone();			_newBitmap.alpha = 0;			_newBitmap.bitmapData.draw( _background );			_newBitmap.bitmapData.draw( _container );						//_newBitmapDarkener.bitmapData.draw( _container );						TweenMax.to( _newBitmap, 2, { alpha:1, onComplete:swapBitmaps, onCompleteParams:[ _bitmap, _newBitmap ] } );						return this;					}						// Changes bitmapdata and disposes the $new bitmapdata.  		private function swapBitmaps( $orig:Bitmap, $new:Bitmap ):void		{						$orig.visible = true;			$orig.alpha = 1;			$orig.bitmapData = $new.bitmapData.clone()						// Kill new bitmap.			$new.bitmapData.dispose();		}						public function onComplete($e:Event=null):TimeZoneView		{						trace("TileZoneView : onComplete")						update();						dispatchEvent( new Event( Event.COMPLETE ) );			//Bedrock.dispatcher.dispatchEvent( new MapEvent( MapEvent.TIMEZONE_UPDATED, this, { darkener:_newBitmapDarkener } ) );						return this;					}			}	}